name: Test

on:
  workflow_run:
    workflows: ["ci"]  # Run after the build workflow
    types:
      - completed
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    # Only run if the build workflow succeeded or this was triggered directly
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        # Install Python dependencies
        python -m pip install --upgrade pip
        pip install adbc-driver-flightsql pyarrow pytest pytest-timeout duckdb
        
        # Install system dependencies for gizmosql_client if testing locally
        sudo apt-get update
        sudo apt-get install -y netcat
    
    - name: Download build artifacts (if available)
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: gizmosql_cli_linux_arm64
        path: ./artifacts
    
    - name: Setup GizmoSQL
      run: |
        # Try to use artifacts if available, otherwise pull Docker image
        if [ -f "./artifacts/gizmosql_server" ]; then
          echo "Using local build artifacts"
          chmod +x ./artifacts/gizmosql_*
          export GIZMOSQL_PASSWORD=test123
          ./artifacts/gizmosql_server --database-filename /tmp/test.duckdb &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
        else
          echo "Using Docker image"
          docker pull gizmodata/gizmosql:latest || docker pull 851725450642.dkr.ecr.us-west-2.amazonaws.com/gizmosql:latest || true
          docker run -d --name gizmosql \
            -p 31337:31337 \
            -e GIZMOSQL_PASSWORD=test123 \
            -e DATABASE_FILENAME=/data/test.duckdb \
            gizmodata/gizmosql:latest || \
          docker run -d --name gizmosql \
            -p 31337:31337 \
            -e GIZMOSQL_PASSWORD=test123 \
            -e DATABASE_FILENAME=/data/test.duckdb \
            851725450642.dkr.ecr.us-west-2.amazonaws.com/gizmosql:latest
        fi
        
        # Wait for server to be ready
        for i in {1..30}; do
          if nc -z localhost 31337; then
            echo "GizmoSQL is ready"
            break
          fi
          echo "Waiting for GizmoSQL to start..."
          sleep 2
        done
    
    - name: Create test database
      run: |
        # Create a simple test database if using local artifacts
        if [ ! -z "$SERVER_PID" ]; then
          python -c "
import duckdb
conn = duckdb.connect('/tmp/test.duckdb')
conn.execute('CREATE TABLE nation (n_nationkey INT, n_name VARCHAR, n_regionkey INT)')
conn.execute(\"\"\"INSERT INTO nation VALUES 
  (0, 'ALGERIA', 0),
  (1, 'ARGENTINA', 1),
  (2, 'BRAZIL', 1)
\"\"\")
conn.close()
"
        fi
    
    - name: Run tests
      run: |
        # Setup test data
        python tests/setup_test_data.py || echo "Setup had warnings, continuing..."
        
        # Run test suite
        python tests/test_catalog_header.py
        python tests/test_prepared_statements.py
    
    - name: Cleanup
      if: always()
      run: |
        if [ ! -z "$SERVER_PID" ]; then
          kill $SERVER_PID || true
        fi
        docker stop gizmosql || true
        docker rm gizmosql || true