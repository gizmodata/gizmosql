name: ci

on:
  workflow_dispatch:
  push:

env:
  GITHUB_IMAGE_NAME: 851725450642.dkr.ecr.us-west-2.amazonaws.com/gizmosql
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build-project-linux:
    name: Build Project - Linux
    strategy:
      matrix:
        include:
          - platform: amd64
            os: linux
            runner: codebuild-gizmosql-build-runner-${{ github.run_id }}-${{ github.run_attempt }}
          - platform: arm64
            os: linux
            runner: codebuild-gizmosql-build-runner-arm-${{ github.run_id }}-${{ github.run_attempt }}
    runs-on: ${{ matrix.runner }}
    env:
      zip_file_name: gizmosql_cli_${{ matrix.os }}_${{ matrix.platform }}.zip
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ninja-build \
            automake \
            gcc \
            git \
            libboost-all-dev \
            libgflags-dev \
            libssl-dev
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          pip install cmake --upgrade
          docker buildx create --use --name mybuilder --driver docker-container

      - name: Configure Project
        uses: threeal/cmake-action@v2.1.0
        with:
          generator: Ninja
          run-build: true

      - name: Zip artifacts
        run: |
          mv build/gizmosql_server build/gizmosql_client .
          zip -j ${{ env.zip_file_name }} gizmosql_server gizmosql_client

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.zip_file_name }}
          path: |
            ${{ env.zip_file_name }}

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: get caller identity2
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 851725450642.dkr.ecr.us-west-2.amazonaws.com

      - name: Build and push full Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          file: Dockerfile.ci
          push: true
          tags: |
            ${{ env.GITHUB_IMAGE_NAME }}:latest-${{ matrix.platform }}
          no-cache: true
          provenance: false
